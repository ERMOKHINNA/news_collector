import numpy as np
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics import jaccard_similarity_score
import pymorphy2

vectorizer = CountVectorizer(min_df=1)

word_list = ['a', 'а-ля', 'б', 'без', 'без ведома', 'безо', 'благодаря', 'близ', 'близко', 'в', 'вблизи', 'ввиду', 'вглубьвдогон', 'вдоль', 
             'взамен', 'включая', 'вкруг', 'вместо', 'вне', 'внизу', 'внутри', 'внутрь', 'во', 'вовнутрь', 'возле', 'вокруг', 'вопреки', 'вослед',
             'впереди', 'вплоть', 'впредь', 'вразрез', 'вроде', 'вслед', 'вследствие', 'встречу', 'выключая', 'для', 'до', 'за', 'замест', 'заместо',
             'и', 'из', 'или', 'из-за', 'из-под', 'из-подо', 'изнутри', 'изо', 'исключая', 'исходя', 'к', 'касаемо', 'касательно', 'ко', 'кончая',
             'кроме', 'кругом', 'меж', 'между', 'мимо', 'на', 'наверху', 'навроде', 'навстречу', 'над', 'надо', 'назад', 'назади', 'накануне', 'наперекор',
             'наперерез', 'наперехват', 'наподобие', 'наподобье', 'напротив', 'наряду', 'насупротив', 'насчёт', 'начиная', 'не', 'невзирая', 'недалеко', 
             'независимо', 'несмотря', 'ниже', 'но', 'о', 'об', 'обо', 'обок', 'обочь', 'около', 'окрест', 'окроме', 'окромя', 'от', 'относительно', 'ото',
             'перед', 'передо', 'по', 'поблизости', 'повдоль', 'поверх', 'под', 'подле', 'подо', 'подобно', 'позади', 'позадь', 'позднее', 'помимо', 'поперёд',
             'поперёк', 'порядка', 'посверху', 'посереди', 'посередине', 'посередь', 'после', 'посреди', 'посредине', 'посредством', 'пред', 'предо', 'прежде',
             'при', 'про', 'промеж', 'промежду', 'против', 'путём', 'ради', 'рядом', 'с', 'сверх', 'сверху', 'свыше', 'же', 'то', 'бы', 'всего', 'итого', 'даже',
             'да', 'нет', 'дабы', 'затем', 'потом', 'коли', 'лишь', 'так', 'еще', 'тот', 'откуда', 'зачем', 'почему', 'значительно', 'он', 'мы', 'его', 'вы', 'вам', 
             'вас', 'еë', 'что', 'который', 'которая', 'которых', 'которым', 'которую', 'их', 'все', 'они', 'я', 'весь', 'мне', 'меня', 'таким', 'всех', 'руб', 'ул', 
             'кв', 'дн', 'гг', 'что-то', 'какой-то', 'где-то', 'как-то', 'зачем-то', 'дальше', 'ближе', 'раньше', 'позже', 'когда-то', 'скажем', 'может', 'допустим', 
             'например', 'однако', 'вообще', 'вероятно', 'почти', 'примерно', 'очень', 'минимально', 'максимально', 'абсолютно', 'огромный', 'предельно', 'сильно', 
             'слабо', 'наиболее', 'наименьшее', 'самый', '.', ',—', '_', '=', '+', '!', '"', ':', '%', '?', '(', ')']
phrase1 ="Путин планирует встречу  с Трампом"
phrase2 ="Путин организовал встречу  с Трампом"
morph = pymorphy2.MorphAnalyzer()

def phrase_analizator(phrase):
    phrase = phrase.split()
    new_list=[]
    for i in phrase:
        if i not in word_list:
            if 'NOUN' or "VERB" in morph.parse(i)[0].tag:
                new_list.append(morph.parse(i)[0].normal_form)
            else:
                continue
        else:
            continue
    
    return (' ').join(new_list)
    
new_phrase1= phrase_analizator(phrase1)

new_phrase2= phrase_analizator(phrase2)

content =[new_phrase1,new_phrase2]




words_in_vector = vectorizer.fit_transform(content)
heading1 = words_in_vector.toarray().transpose()[:,0]
heading2 = words_in_vector.toarray().transpose()[:,1]



print(heading1)
print(heading2)

print(jaccard_similarity_score(heading1,heading2))

